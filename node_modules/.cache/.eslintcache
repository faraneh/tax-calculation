[{"/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/index.tsx":"1","/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/App.tsx":"2","/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/pages/mainPage.tsx":"3","/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/components/calculator.tsx":"4","/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/utility/formatter.tsx":"5"},{"size":275,"mtime":1691280987158,"results":"6","hashOfConfig":"7"},{"size":185,"mtime":1691280987158,"results":"8","hashOfConfig":"7"},{"size":2747,"mtime":1691528698572,"results":"9","hashOfConfig":"7"},{"size":2120,"mtime":1691540948644,"results":"10","hashOfConfig":"7"},{"size":203,"mtime":1691540263209,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},"114ji40",{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"15"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/index.tsx",[],[],[],"/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/App.tsx",[],[],"/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/pages/mainPage.tsx",[],[],"/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/components/calculator.tsx",["29"],[],"import { useEffect, useState } from 'react';\nimport { Formatter } from '../utility/formatter';\n\ninterface CalculatorProps {\nsalary: number;\nyear: number;\n}\n\ninterface TaxBracket {\nmin: number;\nmax?: number;\nrate: number;\n}\n\ninterface TaxData {\ntax_brackets: TaxBracket[];\n}\n\n\nconst Calculator = ({ salary, year }: CalculatorProps) => {\nconst [result, setResult] = useState<TaxData | null>(null);\nconst [errorMsg, setErrorMsg] = useState<string | null>()\n\nuseEffect(() => {\n  const fetchTaxData = async () => {\n    await fetch(`http://localhost:5000/tax-calculator/tax-year/${year}`)\n      .then (response => {\n        if (response && !response.ok) {\n          setErrorMsg('Something wrong happened, please try again later.')\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then((data) => {\n        setErrorMsg(null);\n        setResult(data);\n      })\n      .catch( async (error)  => {\n        await setErrorMsg(\"Something went wrong with data, please try again later.\")\n        console.error('Error fetching tax data:', error); \n      });\n  }\n\n  fetchTaxData();\n},[]);\n\n\n\n// get the bracket - calculate the tax - go grab the next bracket.\nconst calculateTaxAmount = (salary: number, tax_brackets: TaxBracket[]): number => {\n  let remainingSalary = salary;\n  let totalTax: number = 0;\n\n  for (const bracket of tax_brackets) {\n    const { min, max, rate } = bracket;\n\n    if (min && max && remainingSalary > max) {\n      totalTax += (max - min) * rate;\n    } else {\n      totalTax += (remainingSalary - min) * rate;\n      break;\n    }\n  }\n  return totalTax;\n};\n\n\n\n\n\nreturn (\n  <div className=\"calculator\">\n    <h3>Calculation Result</h3>\n    {result ? (\n      <>\n        <p>Salary: {Formatter(salary)}</p>\n        <p>Tax Amount: <span data-testid=\"contentinfo\">{Formatter((calculateTaxAmount(salary, result.tax_brackets)))}</span></p>\n      </>\n      ) : ( !errorMsg ? (\n        <>\n          <p>Loading tax data...</p>\n        </> \n        ) : (\n        <>\n          <p>{errorMsg}</p>\n        </>\n      )\n    )}\n  </div>\n);\n}\n\nexport default Calculator;\n","/Users/faraneh.javadinejad/PERSONAL_GITHUB/tax-calculation/src/utility/formatter.tsx",[],[],{"ruleId":"30","severity":1,"message":"31","line":45,"column":3,"nodeType":"32","endLine":45,"endColumn":5,"suggestions":"33"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'year'. Either include it or remove the dependency array.","ArrayExpression",["34"],{"desc":"35","fix":"36"},"Update the dependencies array to be: [year]",{"range":"37","text":"38"},[1132,1134],"[year]"]